buildscript {
    ext {
        springBootVersion = '1.5.11.RELEASE'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

allprojects {
    group = 'com.hirakida.spring.boot'
    version = '0.0.1-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenCentral()
        maven { url "file://${rootProject.projectDir}/mvn-repo" }
        maven { url 'https://hirakida.github.io/mvn-repo' }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "file://${rootProject.projectDir}/mvn-repo")
            }
        }
    }

    dependencies {
        annotationProcessor('org.projectlombok:lombok')
    }
}

project(':hello-spring-boot-autoconfigure') {
    bootRepackage.enabled = false

    dependencies {
        compile('org.springframework.boot:spring-boot-starter')
        compile('org.springframework.boot:spring-boot-configuration-processor')
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }
}

project(':hello-spring-boot-starter') {
    bootRepackage.enabled = false

    dependencies {
        compile("com.hirakida.spring.boot:hello-spring-boot-autoconfigure:${version}")
        compile('org.springframework.boot:spring-boot-starter')
    }
}

project(':hello-spring-boot-example') {
    uploadArchives.enabled = false

    dependencies {
        compile("com.hirakida.spring.boot:hello-spring-boot-starter:${version}")
        compile('org.springframework.boot:spring-boot-starter-web')
        compileOnly('org.projectlombok:lombok')
        runtime('org.springframework.boot:spring-boot-devtools')
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }
}
